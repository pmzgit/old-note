upstream app
{
    ip_hash;
    server 172.168.1.185:8081;
    server 172.168.1.185:8082 down;
}
upstream appTest
{
    server 172.168.1.185:8999;
}



server {
    listen       80;
    server_name  localhost;
    location / {
        root   html;
        index  index.html index.htm;
    }
    location /AppDownload {
        alias /usr/local/nginx/html/staticHtml/AppDownload;
        index index.html;
    }
    
    
    rewrite ^(.*)$  https://$host$1 permanent;
    #charset koi8-r;
    #access_log  logs/host.access.log  main;
          
}


# HTTPS server
server {
    listen       443 ssl;
    server_name  localhost;
    ssl_certificate      /usr/local/nginx/ssl/214398406040039.pem;
    ssl_certificate_key  /usr/local/nginx/ssl/214398406040039.key;
    ssl_protocols TLSv1.1 TLSv1.2;
    ssl_ciphers ECDHE-RSA-AES256-SHA384:AES256-SHA256:HIGH:!MD5:!aNULL:!eNULL:!NULL:!DH:!EDH:!AESGCM:!RC4;
    ssl_prefer_server_ciphers  on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    gzip  on;
    gzip_min_length 1k;
    gzip_buffers 4 16k;
  
    gzip_comp_level 9;
    gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css;
    gzip_disable "MSIE [1-6]\.";
    gzip_vary on;

    proxy_redirect http:// $scheme://;
    port_in_redirect on;
    location / {
        root   html;
        index  index.html index.htm;
      error_page  404              /404.html;
	error_page  403              /403.html;
	add_header Cache-Control no-store;
    }

   
    location ~ ^/manage
    {
        if ($request_method = HEAD){
          return 403;
        }
        if ($request_method = PUT){
          return 403;
        }
        if ($request_method = DELETE){
           return 403;
        }
        if ($request_method = OPTIONS){
           return 403;
        }
        if ($request_method = PUT){
           return 403;
        }
        proxy_pass_header Server;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_pass http://manage;
    }

    

    
    #--------------- system-ui start-----------------------

  

    location ^~ /service/ {
        proxy_pass  http://172.168.1.186:20000/;
        charset  utf-8;

        proxy_redirect      default;

        proxy_cookie_path   / /service;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-Host $remote_addr;
        proxy_set_header    X-Forwarded-Server $remote_addr;
        proxy_set_header    X-Forwarded-For  $remote_addr;

        # 超时控制
        proxy_connect_timeout 1200s;
        proxy_send_timeout 1200s;
        proxy_read_timeout 1200s;
    }

    
    
   
#----------- Discovery end  -------------
}
